
@model Project.Models.Author

@{
    ViewBag.Title = "Edit Your Image";
}


@using (Html.BeginForm("EditImage", "Author", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <div hidden>
        <div class="form-group">
            @Html.LabelFor(model => model.FName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.University, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.University, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.University, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Passward, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Passward, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Passward, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassward, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassward, new { Model.Passward, htmlAttributes = new { @class = "form-control", @Value = Model.Passward } })
                @Html.ValidationMessageFor(model => model.ConfirmPassward, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="main">
        <div class="container">
            <div class="dlt-container">
                <div class="dlt-paper-info">
                    <div class="avatar-flip">
                        <img src="@Url.Content(Model.ImagePath)" width="200" height="200" />
                    </div>
                    <h1 class="Name" onclick="location.href='@Url.Action("ViewPage", "Author", new { id = Model.Id })'">Author Name: @Html.DisplayFor(model => model.FName) @Html.DisplayFor(model => model.LName)</h1>
        
                    <h1>ــــــــــــــــــــــــــــــــــــــــــــــ</h1>
                </div>
                <div class="dlt-info">
                    <h2 style="color:white;">Please upload your new image</h2>
                    @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <input type="file" name="ImageFile" class="btn-dlt">
                    <input type="submit" value="Save" class="btn-dlt" />
                   
                </div>
            </div>
        </div>
    </div>

}